{"ast":null,"code":"\"use strict\";\n\nvar _Map = require(\"@babel/runtime-corejs2/core-js/map\");\n\nvar _classCallCheck = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime-corejs2/helpers/createClass\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DataManager = /*#__PURE__*/function () {\n  function DataManager(data) {\n    _classCallCheck(this, DataManager);\n\n    this.data = new _Map(data);\n  }\n\n  _createClass(DataManager, [{\n    key: \"getData\",\n    value: function getData() {\n      return this.data;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.data.get(key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.data.set(key, value);\n    }\n  }, {\n    key: \"overwrite\",\n    value: function overwrite(data) {\n      this.data = new _Map(data);\n    }\n  }]);\n\n  return DataManager;\n}();\n\nexports.DataManager = DataManager;","map":{"version":3,"sources":["E:/mv-project/frontend-pilot-mv/node_modules/next/dist/next-server/lib/data-manager.js"],"names":["exports","value","DataManager","data","key","get","set"],"mappings":"AAAA;;;;;;;;;;AACA,uBAAsBA,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;IACMC,W;AACF,uBAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAY,SAAQA,IAAR,CAAZ;AACH;;;;WACD,mBAAU;AACN,aAAO,KAAKA,IAAZ;AACH;;;WACD,aAAIC,GAAJ,EAAS;AACL,aAAO,KAAKD,IAAL,CAAUE,GAAV,CAAcD,GAAd,CAAP;AACH;;;WACD,aAAIA,GAAJ,EAASH,KAAT,EAAgB;AACZ,WAAKE,IAAL,CAAUG,GAAV,CAAcF,GAAd,EAAmBH,KAAnB;AACH;;;WACD,mBAAUE,IAAV,EAAgB;AACZ,WAAKA,IAAL,GAAY,SAAQA,IAAR,CAAZ;AACH;;;;;;AAELH,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DataManager {\n    constructor(data) {\n        this.data = new Map(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get(key) {\n        return this.data.get(key);\n    }\n    set(key, value) {\n        this.data.set(key, value);\n    }\n    overwrite(data) {\n        this.data = new Map(data);\n    }\n}\nexports.DataManager = DataManager;\n"]},"metadata":{},"sourceType":"script"}